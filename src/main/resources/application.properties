server.port = 8081

#### Banco de dados ####

spring.datasource.url=${URL_DATABASE:jdbc:postgresql://localhost:5432/proposta}
spring.datasource.username=${DB_USER:keycloak}
spring.datasource.password=${DB_PASSWORD:password}
spring.jpa.show-sql=${SHOW_SQL:true}
spring.jpa.hibernate.ddl-auto=${JPA_DDL:update}

#### Pool de conexao ####

spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.maximum-pool-size=15
spring.datasource.hikari.minimum-idle=8
spring.datasource.hikari.initialization-fail-timeout=2000
spring.datasource.hikari.isolate-internal-queries=true
spring.datasource.hikari.validation-timeout=3000

#### KAFKA ####
# Endereço do Kafka
spring.kafka.bootstrap-servers=${KAFKA_HOST:localhost:9092}
# Formato da chave (String) recebida!
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringSerializer
# Formato da mensagem \ evento (JSON) recebida(o)!
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
# Identificador do grupo de consumo
spring.kafka.consumer.group-id=${KAFKA_CONSUMER_GROUP_ID:minha-aplicacao}
# Modelo de coleta do consumidor (latest, earliest, none)
spring.kafka.consumer.auto-offset-reset=${KAFKA_AUTO-OFFSET-RESET:latest}
#Topic kafka
spring.kafka.topic.transactions = ${TOPIC_TRANSACTIONS:transacoes}

#### Url ####
feign.url-cartao = ${URL_CARTAO:http://localhost:7777}


#### metrics ####

management.endpoints.web.exposure.include=info,health,prometheus, metrics
management.endpoint.prometheus.enabled = true
management.metrics.export.prometheus.enabled = true
management.endpoints.web.exposure.exclude=env,beans

